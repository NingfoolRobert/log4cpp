.TH log4cpp::Layout 3 "9 Dec 2000" "log4cpp" \" -*- nroff -*-
.ad l
.nh
.SH NAME
log4cpp::Layout \- Extend this abstract class to create your own log layout format. 
.SH SYNOPSIS
.br
.PP
\fC#include <Layout.hh>\fR
.PP
Inherited by \fBlog4cpp::BasicLayout\fR, and \fBlog4cpp::SimpleLayout\fR.
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "virtual \fB~Layout\fR ()"
.br
.ti -1c
.RI "virtual char* \fBformat\fR (const \fBLoggingEvent\fR& event) = 0"
.br
.RI "\fIFormats the \fBLoggingEvent\fR data to a string that appenders can log.\fR"
.in -1c
.SH DETAILED DESCRIPTION
.PP 
Extend this abstract class to create your own log layout format.
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS log4cpp::Layout::~Layout ()\fC [inline, virtual]\fR
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS char * log4cpp::Layout::format (const \fBLoggingEvent\fR & event)\fC [pure virtual]\fR
.PP
Formats the \fBLoggingEvent\fR data to a string that appenders can log.
.PP
Implement this method to create your own layout format. 
.PP
\fBParameters: \fR
.in +1c
.TP
\fB\fIevent\fR\fR The \fBLoggingEvent\fR. 
.PP
\fBReturns: \fR
.in +1c
 an appendable string. 
.PP
Reimplemented in \fBlog4cpp::BasicLayout\fR, and \fBlog4cpp::SimpleLayout\fR.

.SH AUTHOR
.PP 
Generated automatically by Doxygen for log4cpp from the source code.