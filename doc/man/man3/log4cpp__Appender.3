.TH log4cpp::Appender 3 "7 Dec 2000" "log4cpp" \" -*- nroff -*-
.ad l
.nh
.SH NAME
log4cpp::Appender \- Implement this interface for your own strategies for printing log statements. 
.SH SYNOPSIS
.br
.PP
\fC#include <Appender.hh>\fR
.PP
Inherited by \fBlog4cpp::FileAppender\fR, \fBlog4cpp::OstreamAppender\fR, and \fBlog4cpp::SyslogAppender\fR.
.PP
.SS Public Types

.in +1c
.ti -1c
.RI "typedef map<string, Appender*> \fBAppenderMap\fR"
.br
.in -1c
.SS Public Methods

.in +1c
.ti -1c
.RI "virtual \fB~Appender\fR ()"
.br
.ti -1c
.RI "virtual void \fBdoAppend\fR (const \fBLoggingEvent\fR& event) = 0"
.br
.RI "\fILog in \fBAppender\fR specific way.\fR"
.ti -1c
.RI "virtual bool \fBreopen\fR ()"
.br
.RI "\fIReopens the output destination of this \fBAppender\fR, e.g.\fR"
.ti -1c
.RI "virtual void \fBclose\fR () = 0"
.br
.RI "\fIRelease any resources allocated within the appender such as file handles, network connections, etc.\fR"
.ti -1c
.RI "virtual bool \fBrequiresLayout\fR () const = 0"
.br
.RI "\fICheck if the appender uses a layout.\fR"
.ti -1c
.RI "virtual void \fBsetLayout\fR (\fBLayout\fR* layout) = 0"
.br
.RI "\fISet the \fBLayout\fR for this appender.\fR"
.ti -1c
.RI "const string& \fBgetName\fR () const"
.br
.RI "\fIGet the name of this appender.\fR"
.in -1c
.SS Static Public Methods

.in +1c
.ti -1c
.RI "Appender* \fBgetAppender\fR (const string& name)"
.br
.RI "\fIGet a pointer to an exitsing \fBAppender\fR.\fR"
.ti -1c
.RI "bool \fBreopenAll\fR ()"
.br
.RI "\fICall \fBreopen\fR() on all existing Appenders.\fR"
.in -1c
.SS Protected Methods

.in +1c
.ti -1c
.RI "\fBAppender\fR (const string& name)"
.br
.in -1c
.SH DETAILED DESCRIPTION
.PP 
Implement this interface for your own strategies for printing log statements.
.PP
.SH MEMBER TYPEDEF DOCUMENTATION
.PP 
.SS typedef map<string, Appender*> log4cpp::Appender::AppenderMap
.PP
.SH CONSTRUCTOR & DESTRUCTOR DOCUMENTATION
.PP 
.SS log4cpp::Appender::Appender (const string & name)\fC [protected]\fR
.PP
.SS virtual log4cpp::Appender::~Appender ()\fC [virtual]\fR
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS void log4cpp::Appender::close ()\fC [pure virtual]\fR
.PP
Release any resources allocated within the appender such as file handles, network connections, etc.
.PP
Reimplemented in \fBlog4cpp::FileAppender\fR, \fBlog4cpp::OstreamAppender\fR, and \fBlog4cpp::SyslogAppender\fR.
.SS void log4cpp::Appender::doAppend (const \fBLoggingEvent\fR & event)\fC [pure virtual]\fR
.PP
Log in \fBAppender\fR specific way.
.PP
\fBParameters: \fR
.in +1c
.TP
\fB\fIevent\fR\fR The \fBLoggingEvent\fR to log. 
.PP
Reimplemented in \fBlog4cpp::FileAppender\fR, \fBlog4cpp::OstreamAppender\fR, and \fBlog4cpp::SyslogAppender\fR.
.SS Appender * log4cpp::Appender::getAppender (const string & name)\fC [static]\fR
.PP
Get a pointer to an exitsing \fBAppender\fR.
.PP
\fBParameters: \fR
.in +1c
.TP
\fB\fIname\fR\fR The name of the \fBAppender\fR to return. 
.PP
\fBReturns: \fR
.in +1c
 a pointer to an existing \fBAppender\fR, or NULL if no appender with the specfied name exists. 
.SS const string & log4cpp::Appender::getName () const\fC [inline]\fR
.PP
Get the name of this appender.
.PP
The name identifies the appender. 
.PP
\fBReturns: \fR
.in +1c
 the name of the appender. 
.SS bool log4cpp::Appender::reopen ()\fC [virtual]\fR
.PP
Reopens the output destination of this \fBAppender\fR, e.g.
.PP
the logfile  or TCP socket. 
.PP
\fBReturns: \fR
.in +1c
 false if an error occured during reopening, true otherwise. 
.PP
Reimplemented in \fBlog4cpp::FileAppender\fR, \fBlog4cpp::OstreamAppender\fR, and \fBlog4cpp::SyslogAppender\fR.
.SS bool log4cpp::Appender::reopenAll ()\fC [static]\fR
.PP
Call \fBreopen\fR() on all existing Appenders.
.PP
\fBReturns: \fR
.in +1c
 true if all Appenders returned true on their \fBreopen\fR() call. 
.SS bool log4cpp::Appender::requiresLayout () const\fC [pure virtual]\fR
.PP
Check if the appender uses a layout.
.PP
.PP
If the appender implementation admits a layout but can also work without it, then it should return \fCtrue\fR. 
.PP
Reimplemented in \fBlog4cpp::FileAppender\fR, \fBlog4cpp::OstreamAppender\fR, and \fBlog4cpp::SyslogAppender\fR.
.SS void log4cpp::Appender::setLayout (\fBLayout\fR * layout)\fC [pure virtual]\fR
.PP
Set the \fBLayout\fR for this appender.
.PP
\fBParameters: \fR
.in +1c
.TP
\fB\fIlayout\fR\fR The layout to use. 
.PP
Reimplemented in \fBlog4cpp::FileAppender\fR, \fBlog4cpp::OstreamAppender\fR, and \fBlog4cpp::SyslogAppender\fR.

.SH AUTHOR
.PP 
Generated automatically by Doxygen for log4cpp from the source code.